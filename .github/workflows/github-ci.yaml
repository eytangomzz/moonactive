name: Lint, Build, Push to ECR and deploy using Helm

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
        
    - name: Cache Python Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install -r app/requirements.txt
        
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')

  build-and-push:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Image 
        run: |
          docker build -t ${{ vars.REPOSITORY }}:${{ github.run_number }} -f app/Dockerfile .
          docker run -d --rm -p 5000:5000 --name test-app ${{ vars.REPOSITORY }}:${{ github.run_number }}

      - name: Run Application Tests
        run: |
          pip install -r app/requirements.txt
          pytest app/test.py
        env:
          BASE_URL: http://localhost:5000

      - name: Push Docker Image to Amazon ECR
        env:
          REPOSITORY: ${{ vars.REPOSITORY }}
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        run: |
          echo "Pushing Docker image with tag: $IMAGE_TAG to ECR"
          docker tag ${{ vars.REPOSITORY }}:${{ github.run_number }} ${{ steps.ecr-login.outputs.registry }}/${{ vars.REPOSITORY }}:${{ github.run_number }}
          docker push ${{ steps.ecr-login.outputs.registry }}/${{ vars.REPOSITORY }}:${{ github.run_number }}
    
  deploy:
    name: Deploy the application using helm
    runs-on: ubuntu-22.04
    needs: build-and-push
    permissions:
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}


      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2


      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kube config
        env:
          EKS_CLUSTER_NAME: ${{ vars.EKS_CLUSTER_NAME }}
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region ${{ vars.AWS_REGION }}
            
      
      - name: Deploy with Helm
        run: |
          helm upgrade --install my-app ./helm \
            --set deployment.oddApp.repository=${{ steps.ecr-login.outputs.registry }}/${{ vars.REPOSITORY }} \
            --set deployment.oddApp.tag=${GITHUB_RUN_NUMBER} \
            --namespace moonactive \
            --create-namespace      
